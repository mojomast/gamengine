{
  "id": "poker-doom-demo-1",
  "name": "Poker Doom - Mundane Apocalypse",
  "description": "A poker card combat game demo",
  "template": "poker-game",
  "files": {
    "index.html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Poker Doom: Mundane Apocalypse</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/howler@2.2.3/dist/howler.min.js\"></script>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <div id=\"game-container\">\n        <div id=\"game-world\"></div>\n\n        <div id=\"hud\">\n            <div id=\"title-screen\">\n                <h1 class=\"screen-title\">POKER DOOM</h1>\n                <p class=\"screen-subtitle\">Survive the Mundane Apocalypse</p>\n                <button class=\"start-button\" id=\"start-button\">START GAME</button>\n            </div>\n\n            <div id=\"game-over-screen\">\n                <h1 class=\"screen-title\" id=\"game-over-title\">GAME OVER</h1>\n                <p class=\"screen-subtitle\" id=\"game-over-message\">You failed at life. Literally.</p>\n                <button class=\"start-button\" id=\"restart-button\">TRY AGAIN</button>\n            </div>\n\n            <div id=\"enemy-display\">\n                <div class=\"enemy-name\" id=\"current-enemy\">THE VOID</div>\n                <div class=\"enemy-health-container\">\n                    <div class=\"enemy-health\" id=\"enemy-health-bar\" style=\"width: 100%;\"></div>\n                </div>\n            </div>\n\n            <div id=\"player-stats\">\n                <div class=\"stat-box\">\n                    <div class=\"stat-label\">Health</div>\n                    <div class=\"stat-value\" id=\"player-health\">100</div>\n                </div>\n                <div class=\"stat-box\">\n                    <div class=\"stat-label\">Chips</div>\n                    <div class=\"stat-value\" id=\"player-chips\">0</div>\n                </div>\n                <div class=\"stat-box\">\n                    <div class=\"stat-label\">Level</div>\n                    <div class=\"stat-value\" id=\"player-level\">1</div>\n                </div>\n            </div>\n\n            <div id=\"hand-strength-meter\">\n                <div id=\"hand-strength-fill\"></div>\n            </div>\n            <div id=\"hand-strength-label\">HAND STRENGTH: NONE</div>\n\n            <div id=\"hand-display\"></div>\n\n            <div id=\"action-buttons\">\n                <button class=\"action-button\" id=\"fold-btn\">FOLD</button>\n                <button class=\"action-button\" id=\"play-btn\" disabled>PLAY HAND</button>\n                <button class=\"action-button\" id=\"bluff-btn\">BLUFF</button>\n            </div>\n        </div>\n\n        <div id=\"mobile-controls\">\n            <div class=\"mobile-btn\" id=\"mobile-fold\">üö©</div>\n            <div class=\"mobile-btn\" id=\"mobile-play\">‚ô†Ô∏è</div>\n            <div class=\"mobile-btn\" id=\"mobile-bluff\">üòà</div>\n        </div>\n    </div>\n\n    <!-- Project Management Integration -->\n    <script src=\"script.js\"></script>\n\n    <!-- Main Game Script (Optional - Create if needed) -->\n    <!-- <script type=\"module\" src=\"js/main.js\"></script> -->\n</body>\n</html>",
    "styles.css": "@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&family=Silkscreen:wght@400;700&display=swap');\n\n:root {\n    --poker-green: #1a4d2e;\n    --card-red: #d62828;\n    --card-black: #0f0f0f;\n    --gold: #ffd700;\n    --blood-red: #8b0000;\n    --neon-pink: #ff206e;\n    --neon-blue: #05d9e8;\n    --neon-green: #00f593;\n}\n\nbody {\n    font-family: 'Silkscreen', cursive;\n    background-color: #0a0a0a;\n    color: var(--gold);\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    user-select: none;\n    touch-action: manipulation;\n}\n\n#game-container {\n    position: relative;\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n}\n\n#hud {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    z-index: 10;\n}\n\n#title-screen, #game-over-screen {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.9);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    z-index: 20;\n    text-align: center;\n    padding: 2rem;\n    box-sizing: border-box;\n}\n\n#game-over-screen {\n    display: none;\n}\n\n.screen-title {\n    font-family: 'Press Start 2P', cursive;\n    font-size: clamp(2rem, 8vw, 6rem);\n    color: var(--neon-pink);\n    text-shadow: 0 0 10px var(--neon-blue), 0 0 20px rgba(5, 217, 232, 0.5);\n    margin-bottom: 2rem;\n    animation: glow 1.5s infinite alternate;\n}\n\n.screen-subtitle {\n    font-size: clamp(1rem, 3vw, 2rem);\n    color: var(--gold);\n    margin-bottom: 3rem;\n    text-transform: uppercase;\n    letter-spacing: 0.3em;\n}\n\n.start-button {\n    font-family: 'Press Start 2P', cursive;\n    font-size: clamp(1rem, 3vw, 2rem);\n    background: var(--card-red);\n    color: white;\n    border: 4px solid var(--gold);\n    padding: 1rem 2rem;\n    cursor: pointer;\n    transition: all 0.3s;\n    text-shadow: 0 0 5px var(--neon-pink);\n    border-radius: 8px;\n    pointer-events: auto;\n}\n\n.start-button:hover {\n    background: #ff0000;\n    transform: scale(1.05);\n    box-shadow: 0 0 20px var(--neon-pink);\n}\n\n#game-ui {\n    position: absolute;\n    bottom: 1rem;\n    left: 1rem;\n    right: 1rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    pointer-events: none;\n}\n\n#hand-display {\n    display: flex;\n    justify-content: center;\n    gap: 0.5rem;\n    margin-bottom: 1rem;\n    pointer-events: auto;\n}\n\n.card {\n    width: clamp(50px, 12vw, 120px);\n    height: clamp(70px, 17vw, 170px);\n    border-radius: 8px;\n    background: white;\n    position: relative;\n    transform-style: preserve-3d;\n    transition: transform 0.3s, box-shadow 0.3s;\n    cursor: pointer;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);\n    border: 2px solid gold;\n    user-select: none;\n}\n\n.card:hover {\n    transform: translateY(-10px) rotate(5deg);\n    box-shadow: 0 8px 16px rgba(255, 215, 0, 0.7);\n    z-index: 5;\n}\n\n.card.selected {\n    transform: translateY(-15px) rotate(10deg);\n    box-shadow: 0 0 25px var(--neon-blue);\n    border-color: var(--neon-pink);\n}\n\n.card-face {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    backface-visibility: hidden;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 0.3rem;\n    box-sizing: border-box;\n}\n\n.card-back {\n    background: var(--poker-green);\n    transform: rotateY(180deg);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 3rem;\n    color: gold;\n}\n\n.card-front {\n    background: white;\n}\n\n.card-rank {\n    font-size: clamp(1.5rem, 4vw, 3rem);\n    font-weight: bold;\n    text-align: left;\n    margin-left: 0.3rem;\n}\n\n.card-suit {\n    font-size: clamp(1.2rem, 3vw, 2rem);\n    text-align: right;\n    margin-right: 0.3rem;\n}\n\n.hearts, .diamonds {\n    color: var(--card-red);\n}\n\n.clubs, .spades {\n    color: var(--card-black);\n}\n\n#enemy-display {\n    position: absolute;\n    top: 2rem;\n    left: 50%;\n    transform: translateX(-50%);\n    text-align: center;\n    pointer-events: none;\n}\n\n.enemy-name {\n    font-family: 'Press Start 2P', cursive;\n    font-size: clamp(1.5rem, 4vw, 3rem);\n    color: var(--neon-pink);\n    text-shadow: 0 0 10px var(--neon-blue);\n    margin-bottom: 0.5rem;\n    background: rgba(0, 0, 0, 0.7);\n    padding: 0.5rem 1rem;\n    border-radius: 8px;\n    border: 2px solid var(--gold);\n}\n\n.enemy-health-container {\n    width: clamp(200px, 50vw, 400px);\n    height: 20px;\n    background: var(--card-black);\n    border-radius: 10px;\n    overflow: hidden;\n    border: 2px solid var(--gold);\n    margin: 0 auto;\n}\n\n.enemy-health {\n    height: 100%;\n    background: linear-gradient(90deg, var(--neon-pink), var(--neon-blue));\n    transition: width 0.3s;\n}\n\n#player-stats {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n    pointer-events: none;\n}\n\n.stat-box {\n    background: rgba(0, 0, 0, 0.7);\n    border: 2px solid var(--gold);\n    padding: 0.5rem 1rem;\n    border-radius: 8px;\n    min-width: 100px;\n    text-align: center;\n}\n\n.stat-label {\n    font-size: 0.8rem;\n    color: var(--gold);\n    text-transform: uppercase;\n}\n\n.stat-value {\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: var(--neon-green);\n}\n\n#action-buttons {\n    display: flex;\n    justify-content: center;\n    gap: 1rem;\n    pointer-events: auto;\n}\n\n.action-button {\n    font-family: 'Press Start 2P', cursive;\n    font-size: clamp(0.8rem, 2vw, 1.2rem);\n    background: var(--card-red);\n    color: white;\n    border: 2px solid var(--gold);\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n    transition: all 0.2s;\n    border-radius: 4px;\n    min-width: 120px;\n    text-align: center;\n}\n\n.action-button:hover {\n    background: #ff0000;\n    transform: scale(1.05);\n}\n\n.action-button:disabled {\n    background: #444;\n    color: #666;\n    cursor: not-allowed;\n    border-color: #333;\n}\n\n#hand-strength-meter {\n    position: absolute;\n    bottom: 50%;\n    left: 50%;\n    transform: translate(-50%, 50%);\n    width: clamp(200px, 60vw, 400px);\n    height: 20px;\n    background: rgba(0, 0, 0, 0.7);\n    border-radius: 10px;\n    overflow: hidden;\n    border: 2px solid var(--gold);\n    pointer-events: none;\n}\n\n#hand-strength-fill {\n    height: 100%;\n    width: 0%;\n    background: linear-gradient(90deg, var(--neon-green), var(--gold));\n    transition: width 0.3s;\n}\n\n#hand-strength-label {\n    position: absolute;\n    top: -2rem;\n    left: 50%;\n    transform: translateX(-50%);\n    font-family: 'Press Start 2P', cursive;\n    font-size: clamp(1rem, 2.5vw, 1.5rem);\n    color: var(--gold);\n    text-shadow: 0 0 5px var(--neon-blue);\n    pointer-events: none;\n}\n\n#game-world {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8)),\n                url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"><rect width=\"100\" height=\"100\" fill=\"%23111\"/><text y=\"50\" font-size=\"10\" text-anchor=\"middle\" fill=\"%23333\">DOOM</text></svg>');\n    z-index: 1;\n    overflow: hidden;\n}\n\n.pixel-art {\n    image-rendering: pixelated;\n    image-rendering: crisp-edges;\n}\n\n.damage-text {\n    position: absolute;\n    color: white;\n    font-weight: bold;\n    text-shadow: 0 0 5px var(--neon-pink), 0 0 10px var(--neon-blue);\n    font-size: clamp(1.5rem, 4vw, 3rem);\n    pointer-events: none;\n    animation: floatUp 1s forwards;\n    z-index: 15;\n}\n\n.status-effect {\n    position: absolute;\n    font-size: clamp(1rem, 2.5vw, 2rem);\n    font-weight: bold;\n    text-transform: uppercase;\n    pointer-events: none;\n    z-index: 15;\n    animation: statusPulse 1.5s infinite alternate;\n}\n\n.bleeding {\n    color: var(--blood-red);\n    text-shadow: 0 0 5px rgba(139, 0, 0, 0.7);\n}\n\n.stunned {\n    color: var(--neon-blue);\n    text-shadow: 0 0 5px rgba(5, 217, 232, 0.7);\n}\n\n.burning {\n    color: var(--card-red);\n    text-shadow: 0 0 5px rgba(214, 40, 40, 0.7);\n}\n\n@keyframes glow {\n    from { text-shadow: 0 0 5px var(--neon-blue), 0 0 10px rgba(5, 217, 232, 0.3); }\n    to { text-shadow: 0 0 10px var(--neon-blue), 0 0 20px rgba(5, 217, 232, 0.7); }\n}\n\n@keyframes floatUp {\n    0% { transform: translateY(0); opacity: 1; }\n    100% { transform: translateY(-100px); opacity: 0; }\n}\n\n@keyframes statusPulse {\n    from { text-shadow: 0 0 5px currentColor; }\n    to { text-shadow: 0 0 15px currentColor; }\n}\n\n@keyframes shake {\n    0%, 100% { transform: translateX(0); }\n    20%, 60% { transform: translateX(-5px); }\n    40%, 80% { transform: translateX(5px); }\n}\n\n.shake {\n    animation: shake 0.3s;\n}\n\n#mobile-controls {\n    position: fixed;\n    bottom: 1rem;\n    left: 0;\n    right: 0;\n    display: none;\n    justify-content: center;\n    gap: 1rem;\n    padding: 1rem;\n    background: rgba(0, 0, 0, 0.7);\n    z-index: 100;\n    pointer-events: auto;\n}\n\n.mobile-btn {\n    width: 60px;\n    height: 60px;\n    background: var(--card-red);\n    border: 2px solid var(--gold);\n    border-radius: 50%;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.5rem;\n    cursor: pointer;\n    user-select: none;\n}\n\n.mobile-btn:active {\n    background: #ff0000;\n    transform: scale(0.95);\n}\n\n@media (max-width: 768px) {\n    #mobile-controls {\n        display: flex;\n    }\n\n    #hand-display {\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    .card {\n        width: 20vw;\n        height: 28vw;\n        min-width: 60px;\n        min-height: 84px;\n    }\n}\n\n.particle {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n    z-index: 5;\n}",
    "script.js": "console.log('üéÆ Loading Project Management...');\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    console.log('üéÆ DOM Ready - Setting up Project Management');\n\n    // Add floating action button\n    const fab = document.createElement('button');\n    fab.style.cssText = `\n        position: fixed;\n        bottom: 20px;\n        right: 20px;\n        width: 60px;\n        height: 60px;\n        background: linear-gradient(45deg, #ff206e, #05d9e8);\n        border: none;\n        border-radius: 50%;\n        color: white;\n        font-size: 24px;\n        cursor: pointer;\n        box-shadow: 0 4px 15px rgba(255, 32, 110, 0.4);\n        z-index: 10000;\n        transition: all 0.3s ease;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    `;\n    fab.innerHTML = 'üéÆ';\n    fab.title = 'Open Project Manager (F9)';\n\n    fab.addEventListener('click', function() {\n        console.log('üéÆ Opening Project Manager via button...');\n        window.open('./project-manager.html', 'ProjectManager',\n            'width=1400,height=900,menubar=yes,toolbar=yes,scrollbars=yes,resizable=yes');\n    });\n\n    document.body.appendChild(fab);\n\n    // Add keyboard shortcuts (using Function keys for maximum compatibility)\n    document.addEventListener('keydown', function(e) {\n        console.log('üîç Key event detected:', {\n            key: e.key,\n            code: e.code,\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n            shiftKey: e.shiftKey,\n            which: e.which,\n            keyCode: e.keyCode\n        });\n\n        // F9 - Open Project Manager\n        if (e.key === 'F9' || e.code === 'F9') {\n            e.preventDefault();\n            e.stopPropagation();\n            console.log('üéÆ F9 pressed - Opening Project Manager...');\n            window.open('./project-manager.html', 'ProjectManager',\n                'width=1400,height=900,menubar=yes,toolbar=yes,scrollbars=yes,resizable=yes');\n            return false;\n        }\n\n        // F10 - Preserve current project\n        if (e.key === 'F10' || e.code === 'F10') {\n            e.preventDefault();\n            e.stopPropagation();\n            console.log('üíæ F10 pressed - Preserving current project...');\n\n            const preservation = {\n                timestamp: Date.now(),\n                reason: 'Manual preservation via F10',\n                url: window.location.href,\n                title: document.title,\n                content: document.documentElement.outerHTML\n            };\n\n            const key = `pm_preservation_${preservation.timestamp}`;\n            localStorage.setItem(key, JSON.stringify(preservation));\n\n            // Show notification\n            const notification = document.createElement('div');\n            notification.style.cssText = `\n                position: fixed;\n                top: 20px;\n                right: 20px;\n                background: rgba(0, 245, 147, 0.9);\n                color: white;\n                padding: 15px 20px;\n                border-radius: 8px;\n                z-index: 10001;\n                font-family: monospace;\n                font-size: 14px;\n                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);\n            `;\n            notification.textContent = 'üíæ Project preserved successfully!';\n            document.body.appendChild(notification);\n\n            setTimeout(() => notification.remove(), 3000);\n            return false;\n        }\n\n        // F11 - Show restore options (but check for conflicts)\n        if (e.key === 'F8' || e.code === 'F8') {\n            e.preventDefault();\n            e.stopPropagation();\n            console.log('üîô F8 pressed - Showing restore options...');\n\n            const preservations = [];\n            for (let key in localStorage) {\n                if (key.startsWith('pm_preservation_')) {\n                    try {\n                        const data = JSON.parse(localStorage.getItem(key));\n                        preservations.push({ key, data });\n                    } catch (error) {\n                        console.warn('Failed to parse preservation:', key);\n                    }\n                }\n            }\n\n            if (preservations.length === 0) {\n                alert('No preserved projects found. Use F10 to preserve your current work first.');\n                return false;\n            }\n\n            preservations.sort((a, b) => b.data.timestamp - a.data.timestamp);\n\n            let message = 'Available preservations:\\n\\n';\n            preservations.slice(0, 5).forEach((p, index) => {\n                message += `${index + 1}. ${new Date(p.data.timestamp).toLocaleString()} - ${p.data.reason}\\n`;\n            });\n\n            const choice = prompt(message + '\\nEnter number to restore (or cancel):');\n            if (choice && !isNaN(choice)) {\n                const selected = preservations[parseInt(choice) - 1];\n                if (selected) {\n                    if (confirm(`Restore from: ${selected.data.reason}\\nCreated: ${new Date(selected.data.timestamp).toLocaleString()}\\n\\nThis will replace your current work. Continue?`)) {\n                        document.open();\n                        document.write(selected.data.content);\n                        document.close();\n                    }\n                }\n            }\n            return false;\n        }\n\n        // Also add a simple key test - press 'T' to test\n        if (e.key === 't' && !e.ctrlKey && !e.altKey && !e.shiftKey) {\n            console.log('‚úÖ Test key (T) works! Keyboard events are functioning.');\n\n            const testNotif = document.createElement('div');\n            testNotif.style.cssText = `\n                position: fixed;\n                top: 60px;\n                right: 20px;\n                background: rgba(0, 150, 255, 0.9);\n                color: white;\n                padding: 10px 15px;\n                border-radius: 8px;\n                z-index: 10001;\n                font-family: monospace;\n                font-size: 12px;\n            `;\n            testNotif.textContent = '‚úÖ Keyboard test successful!';\n            document.body.appendChild(testNotif);\n            setTimeout(() => testNotif.remove(), 2000);\n        }\n    });\n\n    console.log('‚úÖ Project Management shortcuts active!');\n    console.log('üí° Shortcuts: F9 (Manager), F10 (Save), F8 (Restore)');\n    console.log('üí° Test: Press T to test if keyboard events work');\n});"
  },
  "version": "1.0.0",
  "created": 1737221586000,
  "author": "Game Engine Demo"
}